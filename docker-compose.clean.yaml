# Clean Telematics System - Minimal Configuration
# Only essential services for MLflow and real implementations

version: '3.8'

services:
  # PostgreSQL for MLflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow -d mlflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - telematics-net

  # MLflow Tracking Server
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.7.1
    ports:
      - "5001:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres/mlflow
      MLFLOW_DEFAULT_ARTIFACT_ROOT: /mlflow/artifacts
      MLFLOW_HOST: 0.0.0.0
    volumes:
      - mlflow_data:/mlflow
      - ./models:/mlflow/models
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - telematics-net

  # Real Risk Service with ML Integration
  risk-service:
    build:
      context: .
      dockerfile: microservices/risk-service/Dockerfile.real
    ports:
      - "8092:8082"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - PORT=8082
    depends_on:
      - mlflow
    volumes:
      - ./models:/app/models
    networks:
      - telematics-net

  # Real Pricing Service with Business Logic
  pricing-service:
    build:
      context: .
      dockerfile: microservices/pricing-service/Dockerfile.real
    ports:
      - "8093:8083"
    environment:
      - PORT=8083
    networks:
      - telematics-net

networks:
  telematics-net:
    driver: bridge

volumes:
  postgres_data:
  mlflow_data: