# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to add the following line to the project gitignore:
#     *.iml
#     *.ipr
#     *.iws
#     /out/

# Visual Studio Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows-specific files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# macOS-specific files
.DS_Store
.AppleDouble
.LSOverride

# Linux-specific files
*~

# Temporary files
*.tmp
*.temp
*.swp
*.swo

# Machine Learning / Data Science specific
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.model
*.bin
mlruns/
mlflow/
*.xgb
*.lgb
*.cbm

# Data files (keep sample data, exclude large datasets)
*.csv
*.parquet
*.json
*.xlsx
*.xls
*.db
*.sqlite
*.duckdb

# But keep sample/test data
!*sample*.csv
!*sample*.parquet
!*sample*.json
!*test*.csv
!*test*.parquet
!*test*.json
!*metadata*.json

# Airflow specific
airflow.cfg
airflow_variables.json
logs/
dags/__pycache__/
plugins/__pycache__/

# Docker
.dockerignore

# Cloud provider credentials and configs
.aws/
.azure/
.gcp/
credentials.json
service-account.json
*.pem
*.key
*.crt

# Database
*.db
*.sqlite3
*.sql

# Configuration files with secrets
config/local_*
config/dev_*
config/*_local.yaml
config/*_dev.yaml
config/secrets.yaml
.env.local
.env.production
.env.staging

# IDE files
.idea/
*.sublime-project
*.sublime-workspace
*.vim

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Application specific
business/
deployment/local/
scripts/local_*
init-scripts/

# Monitoring and observability
grafana/data/
prometheus/data/
monitoring/logs/

# Keep docker files but ignore generated containers
!Dockerfile*
!docker-compose*.yaml
!docker-compose*.yml

# Keep requirements but ignore lock files
!requirements*.txt
poetry.lock
Pipfile.lock
